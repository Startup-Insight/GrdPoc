@model GrdPoc.Models.Entities.IncidentalContractItem

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>IncidentalContractItem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IncidentalContractItemId)
        @Html.HiddenFor(model => model.IncidentalContractId)

        <div class="form-group">
            @Html.LabelFor(model => model.IncidentalContractItemDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IncidentalContractItemDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IncidentalContractItemDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IncidentalContractItemValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.IncidentalContractItemValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IncidentalContractItemValue, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.IncidentalContractItemQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.IncidentalContractItemQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IncidentalContractItemQuantity, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.IncidentalContractItemVat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownList("IncidentalContractItemVat", null, htmlAttributes: new { @class = "form-control" })
                @*@Html.EditorFor(model => model.IncidentalContractItemVat, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.IncidentalContractItemVat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OwnerBudgetId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("OwnerBudgetId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OwnerBudgetId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductIncomeCodeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("ProductIncomeCodeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductIncomeCodeId, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.ProductExpenseCodeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("ProductExpenseCodeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductExpenseCodeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />
        <div class="form-group">
            <div class="col-md-offset-10 col-md-2">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @switch (Model.IncidentalContract.IncidentalContracTypeId)
    {
        case 1:
            @Html.ActionLink("Back to Contract", "EditService", "Contract", new { id = Model.IncidentalContractId }, new { @class = "btn btn-default" });
            break;
        case 2:
            @Html.ActionLink("Back to Contract", "EditProduct", "Contract", new { id = Model.IncidentalContractId }, new { @class = "btn btn-default" });
            break;
        case 3:
            @Html.ActionLink("Back to Contract", "EditTrainning", "Contract", new { id = Model.IncidentalContractId }, new { @class = "btn btn-default" });
            break;
        default:
            @Html.ActionLink("Back to Contract", "EditService", "Contract", new { id = Model.IncidentalContractId }, new { @class = "btn btn-default" });
            break;
    }
</div>
